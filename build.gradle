buildscript {
    ext {
        springVersion = "4.3.12.RELEASE"
        springBootVersion = "1.5.8.RELEASE"
        springIntegrationJavaDsl = "1.2.2.RELEASE"
        camelVersion = "2.18.1"
        activeMQClientVersion = "5.14.1"
        kotlinVersion = "1.1.51"
    }

    repositories { mavenCentral() }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

plugins {
    id "org.springframework.boot" version "1.5.8.RELEASE"
    id "org.jetbrains.kotlin.plugin.spring" version "1.1.51"
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"

version '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "kotlin-spring"
    apply plugin: "org.springframework.boot"

    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }

    repositories { mavenCentral() }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
        compile "org.projectlombok:lombok:1.16.0"
        compile 'com.google.guava:guava-parent:20.0'
        testCompile 'org.hamcrest:hamcrest-core:1.3'
        testCompile 'org.mockito:mockito-core:2.8.9'
        testCompile 'junit:junit:4.12'
    }
}

configure(subprojects.findAll { it.path.startsWith(':spring-integration') }) {
    dependencies {
        compile project(":commons")
        compile "org.springframework.integration:spring-integration-java-dsl:${springIntegrationJavaDsl}"
        compile "org.springframework.integration:spring-integration-core:${springVersion}"
        compile "org.springframework.integration:spring-integration-file:${springVersion}"
        compile "org.springframework.integration:spring-integration-ftp:${springVersion}"
        compile "org.springframework.integration:spring-integration-jdbc:${springVersion}"
        compile "org.springframework.integration:spring-integration-jms:${springVersion}"
        compile "org.springframework.integration:spring-integration-http:${springVersion}"
        compile "org.springframework.integration:spring-integration-xml:${springVersion}"
        compile "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        compile "org.apache.activemq:activemq-client:${activeMQClientVersion}"
        compile "com.h2database:h2:1.4.196"
    }
}

project(":spring-amqp-rabbitmq") {
    dependencies {
        compile project(':commons')
        compile "org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}"
        compile "org.springframework:spring-messaging:${springVersion}"
        compile "org.springframework.integration:spring-integration-http:${springVersion}"
    }
}

project(":spring-jms-simple") {
    dependencies {
        compile project(":commons")
        compile "org.springframework:spring-jms:${springVersion}"
        compile "org.apache.activemq:activemq-client:${activeMQClientVersion}"
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
}

project(":apache-camel:file-transfer-pattern") {
    dependencies {
        compile "org.apache.camel:camel-core:$camelVersion"
        compile "org.apache.camel:camel-ftp:$camelVersion"
    }
}

